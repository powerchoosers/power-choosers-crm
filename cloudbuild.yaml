steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/power-choosers-crm:$COMMIT_SHA', '.']
  
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/power-choosers-crm:$COMMIT_SHA']
  
  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
    - 'run'
    - 'deploy'
    - 'power-choosers-crm'
    - '--image'
    - 'gcr.io/$PROJECT_ID/power-choosers-crm:$COMMIT_SHA'
    - '--region'
    - 'us-central1'
    - '--platform'
    - 'managed'
    - '--allow-unauthenticated'
    - '--port'
    - '8080'
    - '--memory'
    - '1Gi'
    - '--cpu'
    - '1'
    - '--min-instances'
    - '1'
    - '--max-instances'
    - '10'
    - '--no-cpu-throttling'
    - '--concurrency'
    - '40'
    - '--set-env-vars'
    - 'NODE_ENV=production'
    - '--set-env-vars'
    - 'SENDGRID_WEBHOOK_SECRET=${_SENDGRID_WEBHOOK_SECRET}'
    - '--set-env-vars'
    - 'NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${_NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}'
    - '--set-env-vars'
    - 'NEXT_PUBLIC_FIREBASE_APP_ID=${_NEXT_PUBLIC_FIREBASE_APP_ID}'
    - '--set-env-vars'
    - 'NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${_NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}'
    - '--set-env-vars'
    - 'NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${_NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}'
    - '--set-env-vars'
    - 'NEXT_PUBLIC_FIREBASE_API_KEY=${_NEXT_PUBLIC_FIREBASE_API_KEY}'
    - '--set-env-vars'
    - 'PERPLEXITY_API_KEY=${_PERPLEXITY_API_KEY}'
    - '--set-env-vars'
    - 'CRON_SECRET=${_CRON_SECRET}'
    - '--set-env-vars'
    - 'SENDGRID_FROM_NAME=${_SENDGRID_FROM_NAME}'
    - '--set-env-vars'
    - 'SENDGRID_FROM_EMAIL=${_SENDGRID_FROM_EMAIL}'
    - '--set-env-vars'
    - 'SENDGRID_API_KEY=${_SENDGRID_API_KEY}'
    - '--set-env-vars'
    - 'GOOGLE_MAPS_API=${_GOOGLE_MAPS_API}'
    - '--set-env-vars'
    - 'CI_AUTO_PROCESS=${_CI_AUTO_PROCESS}'
    - '--set-env-vars'
    - 'CORESIGNAL_API_KEY=${_CORESIGNAL_API_KEY}'
    - '--set-env-vars'
    - 'LUSHA_API_KEY=${_LUSHA_API_KEY}'
    - '--set-env-vars'
    - 'TWILIO_INTELLIGENCE_SERVICE_SID=${_TWILIO_INTELLIGENCE_SERVICE_SID}'
    - '--set-env-vars'
    - 'API_BASE_URL=${_API_BASE_URL}'
    - '--set-env-vars'
    - 'PUBLIC_BASE_URL=${_PUBLIC_BASE_URL}'
    - '--set-env-vars'
    - 'GEMINI_API_KEY=${_GEMINI_API_KEY}'
    - '--set-env-vars'
    - 'FIREBASE_CLIENT_EMAIL=${_FIREBASE_CLIENT_EMAIL}'
    - '--set-env-vars'
    - 'FIREBASE_PRIVATE_KEY=${_FIREBASE_PRIVATE_KEY}'
    - '--set-env-vars'
    - 'FIREBASE_PROJECT_ID=${_FIREBASE_PROJECT_ID}'
    - '--set-env-vars'
    - 'TWILIO_ACCOUNT_SID=${_TWILIO_ACCOUNT_SID}'
    - '--set-env-vars'
    - 'TWILIO_AUTH_TOKEN=${_TWILIO_AUTH_TOKEN}'
    - '--set-env-vars'
    - 'TWILIO_API_KEY_SID=${_TWILIO_API_KEY_SID}'
    - '--set-env-vars'
    - 'TWILIO_API_KEY_SECRET=${_TWILIO_API_KEY_SECRET}'
    - '--set-env-vars'
    - 'TWILIO_TWIML_APP_SID=${_TWILIO_TWIML_APP_SID}'
    - '--set-env-vars'
    - 'TWILIO_PHONE_NUMBER=${_TWILIO_PHONE_NUMBER}'

# Store images in Google Container Registry
images:
  - 'gcr.io/$PROJECT_ID/power-choosers-crm:$COMMIT_SHA'

# Build options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'


